/*
 * StatusPane.java
 */

package videostore.gui;
import videostore.controller.ReportStatusUseCase;

/** The pane associated with the "Item Status" tab on the main card of the GUI
 *
 * @author Russell C. Bjork
 * 
 * MODIFIED BY: Adam Bartholomew and Steve Smith
 */
public class StatusPane extends javax.swing.JPanel 
{
    /** Creates new form StatusPane 
     */
    public StatusPane() 
    {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        itemLabel = new javax.swing.JLabel();
        statusItemField = new javax.swing.JTextField();
        showStatusButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        itemLabel.setText("Item:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        add(itemLabel, gridBagConstraints);

        statusItemField.setColumns(20);
        statusItemField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                statusItemFieldCaretUpdate(evt);
            }
        });
        statusItemField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusItemFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 240;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 10);
        add(statusItemField, gridBagConstraints);

        showStatusButton.setText("Show Status");
        showStatusButton.setEnabled(false);
        showStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStatusButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
        add(showStatusButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    /** The following code is executed each time the pane is shown
        It resets the item field to blank and requests focus for it */
    private void formComponentShown(java.awt.event.ComponentEvent evt)                                    
    {                                        
        statusItemField.setText("");
        statusItemField.requestFocus();
    }
    
    /** Enables the report status button just when the enter item field is non-empty */
    private void statusItemFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_statusItemFieldCaretUpdate
        showStatusButton.setEnabled(statusItemField.getText().length() != 0);
}//GEN-LAST:event_statusItemFieldCaretUpdate

/** Displays a message with the status of an item */    
    private void showStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStatusButtonActionPerformed
        String itemId = statusItemField.getText();
        try {
             //ReportStatusUseCase.getInstance().doStatus(itemId);
             String message = ReportStatusUseCase.getInstance().doStatus(itemId);
             GUI.getInstance().showMessage(message);
        }
        catch(IllegalArgumentException e) {
            GUI.getInstance().showMessage(e.getMessage());
        }
        statusItemField.setText("");
    }//GEN-LAST:event_showStatusButtonActionPerformed

    /** Shows the status of an item if enter/return is pressed on the keyboard in the item text field */
    private void statusItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusItemFieldActionPerformed
        if (showStatusButton.isEnabled())
            showStatusButtonActionPerformed(evt);
    }//GEN-LAST:event_statusItemFieldActionPerformed
                                                  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel itemLabel;
    private javax.swing.JButton showStatusButton;
    private javax.swing.JTextField statusItemField;
    // End of variables declaration//GEN-END:variables
    
}
