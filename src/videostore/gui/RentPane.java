/*
 * RentPane.java
 */

package videostore.gui;
import videostore.controller.RentUseCase;

/** The pane associated with the "Rent" tab on the main card of the GUI
 *
 * @author Russell C. Bjork
 * 
 * MODIFIED BY: Adam Bartholomew and Steve Smith
 */
public class RentPane extends javax.swing.JPanel 
{    
    /** Creates new form RentPane
     */
    public RentPane() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rentItemsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        rentToCustomerField = new javax.swing.JTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        rentItemsButton.setText("Rent Items");
        rentItemsButton.setEnabled(false);
        rentItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentItemsButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        jLabel2.setLabelFor(rentToCustomerField);
        jLabel2.setText("ID of customer to rent to");

        rentToCustomerField.setColumns(20);
        rentToCustomerField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rentToCustomerFieldCaretUpdate(evt);
            }
        });
        rentToCustomerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentToCustomerFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel3)
                    .add(layout.createSequentialGroup()
                        .add(284, 284, 284)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 201, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(177, 177, 177)
                        .add(rentToCustomerField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .add(jLabel2)
                .add(215, 215, 215))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(254, Short.MAX_VALUE)
                .add(rentItemsButton)
                .add(229, 229, 229))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel3))
                .add(61, 61, 61)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rentToCustomerField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 191, Short.MAX_VALUE)
                .add(rentItemsButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /** The following code is executed each time the pane is shown
        It resets the customer id to blank and requests focus for it */
    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown
        rentToCustomerField.setText("");
        rentToCustomerField.requestFocus();
    }//GEN-LAST:event_formComponentShown

    /** Enables the OK button just when the rent to customer field is non-empty */
    private void rentToCustomerFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rentToCustomerFieldCaretUpdate
        rentItemsButton.setEnabled(rentToCustomerField.getText().length() != 0);
    }//GEN-LAST:event_rentToCustomerFieldCaretUpdate

    /** Make pressing return in the customer field equivalent to clicking the ok button */
    private void rentToCustomerFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rentToCustomerFieldActionPerformed
    {//GEN-HEADEREND:event_rentToCustomerFieldActionPerformed
        if (rentItemsButton.isEnabled())
            rentItemsButtonActionPerformed(evt);
    }//GEN-LAST:event_rentToCustomerFieldActionPerformed

    /** Rent items when the OK button is clicked */
    private void rentItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentItemsButtonActionPerformed
        String customerID = rentToCustomerField.getText();
        try {
            RentUseCase.getInstance().start(customerID);
            GUI.getInstance().gotoCard("rent");
        }
        catch(IllegalArgumentException e) {
            GUI.getInstance().showMessage(e.getMessage());
        }
        rentToCustomerField.setText("");
        rentToCustomerField.requestFocus();
    }//GEN-LAST:event_rentItemsButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton rentItemsButton;
    private javax.swing.JTextField rentToCustomerField;
    // End of variables declaration//GEN-END:variables

}
